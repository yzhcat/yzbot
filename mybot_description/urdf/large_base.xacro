<?xml version="1.0"?>
<robot name="originbot"
    xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- 大号机器人模型 -->
    <!-- PROPERTY LIST -->
    <xacro:property name="M_PI" value="3.1415926" />
    <xacro:property name="base_mass" value="6" />

    <xacro:property name="base_width" value="0.480" />
    <xacro:property name="base_length" value="0.480" />
    <xacro:property name="base_height" value="0.1" />

    <!-- 轮子 -->
    <xacro:property name="wheel_mass" value="1" />
    <xacro:property name="wheel_radius" value="0.065" />
    <xacro:property name="wheel_length" value="0.050" />

    <!-- base_length/2 = 0.16; x偏移-0.02-->
    <xacro:property name="wheel_joint_x" value="${base_length/2 - 0.02}" />
    <!-- (base_width+wheel_length)/2 轮距 -->
    <xacro:property name="wheel_joint_y" value="${(base_width+wheel_length)/2}" />
    <!-- base_height/2 = 0.05;向上偏移一点（-0.015） -->
    <xacro:property name="wheel_joint_z" value="${base_height/2 - 0.015}" />

    <!-- 支撑轮 -->
    <xacro:property name="caster_mass" value="0.4" />
    <!-- 计算中心到地面高度，再减去底盘得到底盘到地面高度:
    wheel_joint_z + wheel_radius  - base_height/2; -->
    <xacro:property name="caster_radius" value="${(wheel_joint_z + wheel_radius - base_height/2)/2}" />
    <!-- 与前轮对称 -->
    <xacro:property name="caster_joint_x" value="${wheel_joint_x}" />
    <xacro:property name="caster_joint_y" value="${base_width/2-caster_radius}" />

    <material name="yellow">
        <color rgba="1 0.4 0 1" />
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95" />
    </material>
    <material name="gray">
        <color rgba="0.75 0.75 0.75 1" />
    </material>

    <!-- Macro for inertia matrix -->

    <xacro:macro name="inertial_matrix" params="m s">
    <xacro:property name="i" value="${m*s*s/6}" />
    <inertial>
        <mass value="${m}" />
        <inertia  ixx="${i}" ixy="0" ixz="0"
                iyy="${i}" iyz="0"
                izz="${i}" />
    </inertial>
    </xacro:macro>

    <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
    </xacro:macro>

    <!-- Macro for robot 轮子 -->
    <xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="${wheel_joint_x} ${reflect*wheel_joint_y} ${-wheel_joint_z}"
                rpy="0 0 0" />
            <parent link="base_link" />
            <child link="${prefix}_wheel_link" />
            <axis xyz="0 1 0" />
        </joint>

        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
            </collision>
            <xacro:inertial_matrix m="${wheel_mass}" s="${caster_radius}" />
            <!-- <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" /> -->
        </link>

    </xacro:macro>

    <!-- Macro for robot 支撑轮 -->
    <xacro:macro name="caster" params="prefix reflect">
        <joint name="${prefix}_caster_joint" type="fixed">
            <origin xyz="${-1*caster_joint_x} ${reflect*caster_joint_y} ${-(base_height/2 + caster_radius)}"
                rpy="0 0 0" />
            <parent link="base_link" />
            <child link="${prefix}_caster_link" />
        </joint>

        <link name="${prefix}_caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>
            <xacro:inertial_matrix m="${caster_mass}" s="${caster_radius}" />
        </link>

    </xacro:macro>


    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>

    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 ${base_height/2 + caster_radius*2}" rpy="0 0 0" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>

    <link name="base_link">
        <visual>
            <origin xyz=" 0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
            <material name="yellow" />
        </visual>
        <!-- <collision>
            <origin xyz=" 0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${base_length*0.1} ${base_width*0.1} ${base_height*0.1}" />
            </geometry>
        </collision> -->
        <xacro:box_inertia m="${base_mass}" w="${base_width}" h="${base_height}" d="${base_length}" />

    </link>


    <xacro:wheel prefix="left" reflect="1" />
    <xacro:wheel prefix="right" reflect="-1" />

    <xacro:caster prefix="backr" reflect="-1" />
    <xacro:caster prefix="backl" reflect="1" />


</robot>